% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scenario_module.R
\name{scenario_server}
\alias{scenario_server}
\title{Server-side logic for defining multiple scenarios}
\usage{
scenario_server(id, reference_data, selected_risk_factors, debug = FALSE)
}
\arguments{
\item{id}{A character string. The ID used to namespace the server-side logic.
It should match the id of the corresponding UI element.}

\item{reference_data}{A reactive value that returns a list. One item in the
list must be named \code{risk_factors} and contain elements named \code{Transitions} and
\code{Prevalences}. The names of the values of these elements are passed on as
choice options to \link{single_scenario_server}.}

\item{selected_risk_factors}{A reactive value that returns a list of two
character vectors, named \code{prevalences} and \code{transitions}. The reactive value
is the output from a \link{risk_factor_server}.}

\item{debug}{A boolean indicating debug mode, default is FALSE.}
}
\value{
A reactive expression. The expression returns a list with the user inputs
collected from all child servers. The list is created with \link{fetch_server_data}.
}
\description{
Server-side logic for defining multiple scenarios
}
\details{
The server handles the following things:
\itemize{
\item Updates choices for transitions and prevalences for defining scenarios
\item Adds and removes a scenario tab when the user clicks on the corresponding
buttons in the UI.
\item Keeps track of active servers and their counts
}
}
\seealso{
\code{\link[=single_scenario_server]{single_scenario_server()}}
}
\keyword{internal}
