[{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dynamo-hia.github.io/hiaR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://dynamo-hia.github.io/hiaR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hendriek Boshuizen. Author, maintainer. Malte Lüken. Author. Flavio Hafner. Author. Laurens Bogaardt. Author.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boshuizen H, Lüken M, Hafner F, Bogaardt L (2024). hiaR: Dynamic Modeling Health Impact Assessment R. R package version 1.0.0, https://dynamo-hia.github.io/hiaR/.","code":"@Manual{,   title = {hiaR: Dynamic Modeling of Health Impact Assessment in R},   author = {Hendriek Boshuizen and Malte Lüken and Flavio Hafner and Laurens Bogaardt},   year = {2024},   note = {R package version 1.0.0},   url = {https://dynamo-hia.github.io/hiaR/}, }"},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"dynamic-modeling-of-health-impact-assessment-in-r","dir":"","previous_headings":"","what":"Dynamic Modeling of Health Impact Assessment in R","title":"Dynamic Modeling of Health Impact Assessment in R","text":"goal hiaR R package provide user-friendly interface DYNAMO-HIA software tool. contains R functions configure run DYNAMO-HIA, visualize results. package also contains Shiny app interactively run DYNAMO-HIA. DYNAMO-HIA (DYNamic MOdeling Health Impact Assessment) generic software tool specially designed aid quantification step health impact assessment. DYNAMO-HIA generic sense allows arbitrary chronic diseases risk-factors fit standard causal pathway health impact assessment framework modeled. user can import use data add analyze diseases populations interest .","code":""},{"path":[]},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"running-the-shiny-app","dir":"","previous_headings":"Getting Started","what":"Running the Shiny App","title":"Dynamic Modeling of Health Impact Assessment in R","text":"can start Shiny app hiaR::launch_application:","code":"hiaR::launch_application()"},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"running-dynamo-hia-from-r","dir":"","previous_headings":"Getting Started","what":"Running DYNAMO-HIA from R","title":"Dynamic Modeling of Health Impact Assessment in R","text":"can run DYNAMO-HIA R using hiaR::run_dynamo_hia function. function requires specific folder structure, reference data, simulation configuration file present. See hiaR documentation detailed example.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Dynamic Modeling of Health Impact Assessment in R","text":"can install hiaR package GitHub via remotes:","code":"remotes::install_github(\"Dynamo-HIA/hiaR\")"},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"user-documentation","dir":"","previous_headings":"","what":"User Documentation","title":"Dynamic Modeling of Health Impact Assessment in R","text":"documentation hiaR package available https://dynamo-hia.github.io/hiaR/. documentation DYNAMO-HIA including user manual, examples, reference datasets available https://dynamo-hia.github.io/.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"development-documentation","dir":"","previous_headings":"","what":"Development Documentation","title":"Dynamic Modeling of Health Impact Assessment in R","text":"Make sure right settings line endings. open project RStudio, settings automatically set. Otherwise, can set manually: RStudio Open Tools →\\rightarrowProject Options →\\rightarrowCode Editing Tick Ensure source files end newline Set Line ending conversions Windows (CR/LF) Console Run usethis::use_rstudio(line_ending = \"windows\") Windows, make sure git config core.autocrlf set false.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"conventions","dir":"","previous_headings":"Development Documentation","what":"Conventions","title":"Dynamic Modeling of Health Impact Assessment in R","text":"follow tidyverse style guide R code. can use styler package automatically format code:","code":"# Style single R file (has tidyverse style as default) styler::style_file(\"R/myfile.R\")  # Apply style to entire package styler::style_pkg()"},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"naming-of-modules","dir":"","previous_headings":"Development Documentation > Conventions","what":"Naming of Modules","title":"Dynamic Modeling of Health Impact Assessment in R","text":"R Shiny modules, use following naming pattern: R file module named my_purpose_module.R Inside my_purpose_module.R, define functions my_purpose_ui user interface my_purpose_server server possible, add automatic tests server functionality. UI functionality complex test decided test manually now.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"imports","dir":"","previous_headings":"Development Documentation > Conventions","what":"Imports","title":"Dynamic Modeling of Health Impact Assessment in R","text":"functions shiny shinyFiles can used directly without shiny:: prefix. packages, explicit use mypackage::myfunction().","code":""},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Dynamic Modeling of Health Impact Assessment in R","text":"hiaR package developed Netherlands eScience Center Rijksinstituut voor Volksgezondheid en Milieu (RIVM; National Institute Public Health Environment).","code":""},{"path":"https://dynamo-hia.github.io/hiaR/index.html","id":"generative-ai-statement","dir":"","previous_headings":"","what":"Generative AI Statement","title":"Dynamic Modeling of Health Impact Assessment in R","text":"code repository partly generated /refined using ChatGPT 4, Claude 3.5 Sonnet, /GitHub Copilot Individual. AI-generated output verified correctness, accuracy, completeness, adapted needed, approved authors.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/add_df_to_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a data frame to an XML document — add_df_to_xml","title":"Add a data frame to an XML document — add_df_to_xml","text":"function appends rows data frame child elements specified root XML node. row added new child element column values either attributes child elements, depending structure data.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/add_df_to_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a data frame to an XML document — add_df_to_xml","text":"","code":"add_df_to_xml(root, df, row_name)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/add_df_to_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a data frame to an XML document — add_df_to_xml","text":"root XML node (created xml_new_root similar) serve root element data frame rows added. df data frame row represents set values added child element root XML node. column names data frame used names child elements. row_name character string representing name used row data frame XML structure. row added child element root node name.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/add_df_to_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a data frame to an XML document — add_df_to_xml","text":"modified root XML node added rows data frame.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/add_df_to_xml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a data frame to an XML document — add_df_to_xml","text":"row data frame, new child node created root element. column data frame becomes child element row's node, column name used tag value data frame used content tag. value NA, column skipped row. function designed handle simple data frames cell contains atomic values (strings, numbers, etc.). handle complex nested structures.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/add_df_to_xml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a data frame to an XML document — add_df_to_xml","text":"","code":"if (FALSE) { # \\dontrun{ # Example for disease prevalence across age and sex groups root <- xml2::xml_new_root('prevalences') df <- data.frame(age = c(21, 21, 22, 22), sex = c(0, 1, 0, 1), value = c(1000, 2000, 1500, 3000)) root <- add_df_to_xml(root, df, 'prevalence') } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/collect_relative_risks.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect files on relative risks in compact lists — collect_relative_risks","title":"Collect files on relative risks in compact lists — collect_relative_risks","text":"function iterates keys keyword_map. key, iterates elements in_list, extracts element named key binds dataframes one, using rbind. requires keys keyword_map present list names lists in_list.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/collect_relative_risks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect files on relative risks in compact lists — collect_relative_risks","text":"","code":"collect_relative_risks(in_list, keyword_map)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/collect_relative_risks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect files on relative risks in compact lists — collect_relative_risks","text":"in_list list lists, upper level names risk factors diseases, list contains one multiple lists corresponding names mapping. keyword_map named list maps list names second nesting in_list (keys) shorter names, NULL (values). values NULL, assigned value entire list output. values NULL, names list iterated assigned output.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/collect_relative_risks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect files on relative risks in compact lists — collect_relative_risks","text":"list 2 elements, names coming names keyword_map. two lists contain list 3, named , , filename. indicate name file contains relative risks going risk factors diseases, diseases, diseases death/disability. type relative risk file present, list empty.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_disease.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure a disease — configure_disease","title":"Configure a disease — configure_disease","text":"Creates configuration list disease simulation.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_disease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure a disease — configure_disease","text":"","code":"configure_disease(   name,   prevalence_filename,   incidence_filename,   excess_mortality_filename,   disability_weights_filename )"},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_disease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure a disease — configure_disease","text":"name character string specifies unique name disease. prevalence_filename character string specifies path prevalence file. incidence_filename character string specifies path incidence file. excess_mortality_filename character string specifies path excess mortality file. disability_weights_filename character string specifies path disability weights file.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_disease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure a disease — configure_disease","text":"list containing disease configuration parameters.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_disease.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure a disease — configure_disease","text":"","code":"configure_disease(   name = \"Lung_Cancer\",   prevalence_filename = \"NL_disease_LungCa_Prev_V2\",   incidence_filename = \"NL_disease_LungCa_Inc_V2\",   excess_mortality_filename = \"NL_disease_LungCa_ExecMor_V2\",   disability_weights_filename = \"NL_disease_LungCa_DALY_V1\" ) #> $uniquename #> [1] \"Lung_Cancer\" #>  #> $prevfilename #> [1] \"NL_disease_LungCa_Prev_V2\" #>  #> $incfilename #> [1] \"NL_disease_LungCa_Inc_V2\" #>  #> $excessmortfilename #> [1] \"NL_disease_LungCa_ExecMor_V2\" #>  #> $dalyweightsfilename #> [1] \"NL_disease_LungCa_DALY_V1\" #>"},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_relative_risk.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure a relative risk — configure_relative_risk","title":"Configure a relative risk — configure_relative_risk","text":"Creates configuration list relative risk relationship risk factor disease.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_relative_risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure a relative risk — configure_relative_risk","text":"","code":"configure_relative_risk(index, from, to, relative_risk_filename)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_relative_risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure a relative risk — configure_relative_risk","text":"index character string specifies unique identifier relative risk relationship. character string specifies source (usually risk factor). character string specifies target (usually disease). relative_risk_filename character string specifies path relative risk file.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_relative_risk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure a relative risk — configure_relative_risk","text":"list containing relative risk configuration parameters.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_relative_risk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure a relative risk — configure_relative_risk","text":"","code":"configure_relative_risk(   index = 0,   from = \"Smoking_cat3\",   to = \"Lung_Cancer\",   relative_risk_filename = \"RR_to_LungCa-Smoking_cat3\" ) #> $RRindex #> [1] 0 #>  #> $isRRfrom #> [1] \"Smoking_cat3\" #>  #> $isRRto #> [1] \"Lung_Cancer\" #>  #> $isRRFile #> [1] \"RR_to_LungCa-Smoking_cat3\" #>"},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_risk_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure a risk factor — configure_risk_factor","title":"Configure a risk factor — configure_risk_factor","text":"Creates configuration list risk factor simulation.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_risk_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure a risk factor — configure_risk_factor","text":"","code":"configure_risk_factor(name, transition_filename, prevalence_filename)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_risk_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure a risk factor — configure_risk_factor","text":"name character string specifies unique name risk factor. transition_filename character string specifies path transition rates file. prevalence_filename character string specifies path prevalence file.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_risk_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure a risk factor — configure_risk_factor","text":"list containing risk factor configuration parameters.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_risk_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure a risk factor — configure_risk_factor","text":"","code":"configure_risk_factor(   name = \"Smoking_cat3\", # Should be the same as the name in the reference data   transition_filename = \"NL_RF_smoking_Transitions_Netto\",   prevalence_filename = \"NL_RF_smoking_cat3_Prev_V1\" ) #> $uniquename #> [1] \"Smoking_cat3\" #>  #> $transfilename #> [1] \"NL_RF_smoking_Transitions_Netto\" #>  #> $prevfilename #> [1] \"NL_RF_smoking_cat3_Prev_V1\" #>"},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure a scenario — configure_scenario","title":"Configure a scenario — configure_scenario","text":"Creates configuration list intervention scenario simulation.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure a scenario — configure_scenario","text":"","code":"configure_scenario(   name,   transition_filename,   prevalence_filename,   success_rate = 100,   min_age = 0,   max_age = 95,   gender = 2 )"},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure a scenario — configure_scenario","text":"name character string specifies unique name scenario. transition_filename character string specifies path transition rates file. prevalence_filename character string specifies path prevalence file. success_rate numeric specifies intervention success rate (0-100). Default 100. min_age numeric specifies minimum target age (0-95). Default 0. max_age numeric specifies maximum target age (0-95). Default 95. gender numeric specifies target gender (0=female, 1=male, 2=). Default 2 ().","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure a scenario — configure_scenario","text":"list containing scenario configuration parameters.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/configure_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure a scenario — configure_scenario","text":"","code":"configure_scenario(   name = \"All_Never_Smokers\",   success_rate = 80,   min_age = 18,   max_age = 65,   gender = 2, # Both female and male   transition_filename = \"NL_RF_smoking_Transitions_Netto\",   prevalence_filename = \"RF_smoking_cat_All_Never_Smokers_Prev\" ) #> $uniquename #> [1] \"All_Never_Smokers\" #>  #> $successRate #> [1] 80 #>  #> $targetMinAge #> [1] 18 #>  #> $targetMaxAge #> [1] 65 #>  #> $targetSex #> [1] 2 #>  #> $transfilename #> [1] \"NL_RF_smoking_Transitions_Netto\" #>  #> $prevfilename #> [1] \"RF_smoking_cat_All_Never_Smokers_Prev\" #>"},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choice_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a choice list from a data frame of relative risks — create_choice_list","title":"Create a choice list from a data frame of relative risks — create_choice_list","text":"Create choice list data frame relative risks","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choice_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a choice list from a data frame of relative risks — create_choice_list","text":"","code":"create_choice_list(input_df, caller = \"ui\")"},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choice_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a choice list from a data frame of relative risks — create_choice_list","text":"input_df data frame containing relative risk data. caller string indicating calling context, either \"ui\" \"server\".","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choice_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a choice list from a data frame of relative risks — create_choice_list","text":"named list names either full descriptions relative risks (caller = \"ui\") file names (caller = \"server\").","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choice_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a choice list from a data frame of relative risks — create_choice_list","text":"function generates choice list data frame relative risks. format returned list depends whether called UI server context.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choices_from_relative_risks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create choices from filtered relative risks — create_choices_from_relative_risks","title":"Create choices from filtered relative risks — create_choices_from_relative_risks","text":"Create choices filtered relative risks","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choices_from_relative_risks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create choices from filtered relative risks — create_choices_from_relative_risks","text":"","code":"create_choices_from_relative_risks(relative_risks, caller = \"ui\")"},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choices_from_relative_risks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create choices from filtered relative risks — create_choices_from_relative_risks","text":"relative_risks list containing available relative risk data. caller string indicating calling context, either \"ui\" \"server\".","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choices_from_relative_risks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create choices from filtered relative risks — create_choices_from_relative_risks","text":"list containing four elements: disease_choices list choices relative risks disease disease risk_factor_choices list choices relative risks risk factor disease death_choices list choices relataive risks risk factor death disability_choices list choices relative risks risk factor disability","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_choices_from_relative_risks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create choices from filtered relative risks — create_choices_from_relative_risks","text":"function processes available relative risk data creates choice lists. lists can used UI elements checkBoxGroupInput. using caller = \"server\", can used server listening respective UI return file names elements chosen user.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_simulation_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simulation directory with configuration file — create_simulation_dir","title":"Create a simulation directory with configuration file — create_simulation_dir","text":"Creates new directory simulation generates configuration XML file. configuration read DYNAMO-HIA model run configured simulation. Simulation results stored directory. function overwrites existing configuration files.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_simulation_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simulation directory with configuration file — create_simulation_dir","text":"","code":"create_simulation_dir(   simulation_name,   population_name,   starting_year,   number_of_years,   population_size,   ref_scenario_name,   has_newborns = FALSE,   min_age = 0,   max_age = 95,   time_step = 1,   random_seed = NULL,   scenarios = list(),   diseases = list(),   risk_factors = list(),   relative_risks = list() )"},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_simulation_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a simulation directory with configuration file — create_simulation_dir","text":"simulation_name character string name simulation directory created. population_name character string name population directory used. starting_year numeric indicating year simulation starts. number_of_years numeric indicating duration simulation years. population_size Numeric indicating size population simulate. ref_scenario_name character string name reference scenario. has_newborns logical whether include newborns simulation. Default FALSE. min_age numeric indicating minimum age population (0-95). Default 0. max_age numeric indicating maximum age population (0-95). Default 95. time_step numeric indicating time step simulation. Must 1. random_seed optional seed random number generation. scenarios list scenario configurations. scenario must list containing: uniquename: character string uniquely identifies scenario successRate: numeric specifies success rate 0 100 targetMinAge: numeric sets minimum target age (0-95) targetMaxAge: numeric sets maximum target age (0-95) targetSex: numeric indicates target sex code (0: male; 1: female; 2: ) transfilename: character string specifies transition filename prevfilename: character string specifies prevalence filename diseases list disease configurations. disease must list containing: uniquename: character string uniquely identifies disease prevfilename: character string specifies prevalence filename incfilename: character string specifies incidence filename excessmortfilename: character string specifies excess mortality filename dalyweightsfilename: character string specifies disability weights filename risk_factors list containing single risk factor configuration : uniquename: character string uniquely identifies risk factor transfilename: character string specifies transition filename prevfilename: character string specifies prevalence filename relative_risks list relative risk configurations. relative risk must list containing: RRindex: character string identifies relative risk relationship isRRfrom: character string specifies source. Must name disease risk factor isRRto: character string specifies target identifier. Must name disease risk factor isRRFile: character string specifies relative risk file path","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_simulation_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a simulation directory with configuration file — create_simulation_dir","text":"Logical TRUE directory creation configuration successful.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/create_simulation_dir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a simulation directory with configuration file — create_simulation_dir","text":"function creates directory specified simulation name generates configuration.xml file inside using provided parameters.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server logic for selecting multiple diseases — disease_selection_server","title":"Server logic for selecting multiple diseases — disease_selection_server","text":"Handle selection multiple diseases associated parameters (prevalence, incidence, excess mortality, disability). Based provided reference data, function dynamically creates manages individual disease servers.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server logic for selecting multiple diseases — disease_selection_server","text":"","code":"disease_selection_server(id, reference_data)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server logic for selecting multiple diseases — disease_selection_server","text":"id string. ID namespace module. reference_data reactive expression returns list containing disease data. list 'diseases' element, list element represents disease associated XML files.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server logic for selecting multiple diseases — disease_selection_server","text":"reactive expression returns list selected diseases parameters. element list contains: name: original name disease reference data values: list selected XML files prevalence, incidence, excess mortality, disability diseases selected user (checkbox checked) included output.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_server.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Server logic for selecting multiple diseases — disease_selection_server","text":"server function dynamically creates individual disease servers disease reference data. responds changes reference data, updating available diseases accordingly. function collects processes user selections disease, returning reactive expression compiled data.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"UI for selecting multiple diseases — disease_selection_ui","title":"UI for selecting multiple diseases — disease_selection_ui","text":"Create user interface selecting multiple diseases associated XML files prevalence, incidence, excess mortality, disability.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI for selecting multiple diseases — disease_selection_ui","text":"","code":"disease_selection_ui(id, reference_data)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI for selecting multiple diseases — disease_selection_ui","text":"id string. ID namespace module. reference_data reactive expression returns list containing disease data. list 'diseases' element, list element represents disease associated XML files.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UI for selecting multiple diseases — disease_selection_ui","text":"tagList containing UI elements disease. disease represented single_disease_ui component.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/disease_selection_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UI for selecting multiple diseases — disease_selection_ui","text":"function generates UI multiple diseases based provided reference data. disease reference data, creates single_disease_ui component, allowing users select specific XML files various disease parameters.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/extract_relative_risk_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the source of relative risk transitions — extract_relative_risk_source","title":"Extract the source of relative risk transitions — extract_relative_risk_source","text":"Extracts substring unique hyphen file name.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/extract_relative_risk_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the source of relative risk transitions — extract_relative_risk_source","text":"","code":"extract_relative_risk_source(file_name)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/extract_relative_risk_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the source of relative risk transitions — extract_relative_risk_source","text":"file_name file name string.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/extract_relative_risk_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the source of relative risk transitions — extract_relative_risk_source","text":"string. error thrown file name expected format right ending.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/extract_relative_risk_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the source of relative risk transitions — extract_relative_risk_source","text":"","code":"if (FALSE) { # \\dontrun{ extract_relative_risk_source(\"RR_to_BreatCa-Smoking_dur.xml\") } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/fetch_server_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get return data from a list of servers — fetch_server_data","title":"Get return data from a list of servers — fetch_server_data","text":"Get return data list servers","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/fetch_server_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get return data from a list of servers — fetch_server_data","text":"","code":"fetch_server_data(server_name_prefix, server_list, item_names)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/fetch_server_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get return data from a list of servers — fetch_server_data","text":"server_name_prefix prefix server names. function looks server names server_name_prefix + , ranges 1 number servers server_list. server_list list shiny moduleServers. item_names names items server refers . instance, can names diseases risk factors.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/fetch_server_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get return data from a list of servers — fetch_server_data","text":"named list non-NULL server values.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_df_from_server_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a dataframe based on return values from a list of servers. — filter_df_from_server_data","title":"Filter a dataframe based on return values from a list of servers. — filter_df_from_server_data","text":"Filter dataframe based return values list servers.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_df_from_server_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a dataframe based on return values from a list of servers. — filter_df_from_server_data","text":"","code":"filter_df_from_server_data(df_to_filter, server_list, filter_col = \"filename\")"},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_df_from_server_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a dataframe based on return values from a list of servers. — filter_df_from_server_data","text":"df_to_filter data frame filtered output server_list. server_list list servers, returning character vector, instance user-chosen elements. filter_col column df_to_filter use subsetting relative user input data.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_df_from_server_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a dataframe based on return values from a list of servers. — filter_df_from_server_data","text":"data.frame","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_relative_risks.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter relative risks based on selected diseases and risk factors — filter_relative_risks","title":"Filter relative risks based on selected diseases and risk factors — filter_relative_risks","text":"Filter relative risks based selected diseases risk factors","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_relative_risks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter relative risks based on selected diseases and risk factors — filter_relative_risks","text":"","code":"filter_relative_risks(relative_risks, diseases, risk_factors)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_relative_risks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter relative risks based on selected diseases and risk factors — filter_relative_risks","text":"relative_risks list containing relative risk data. diseases vector selected disease names. risk_factors vector selected risk factor names.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_relative_risks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter relative risks based on selected diseases and risk factors — filter_relative_risks","text":"list containing data frames: from_diseases Relative risks diseases from_risk_factors Relative risks risk factors diseases to_death Relative risks risk factors death to_disability Relative risks risk factors disability","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/filter_relative_risks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter relative risks based on selected diseases and risk factors — filter_relative_risks","text":"function filters relative risk data based provided diseases risk factors. returns subset original data includes specified diseases risk factors. relative risk given category, returns empty data frame category.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_filenames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get disease filenames — get_disease_filenames","title":"Get disease filenames — get_disease_filenames","text":"Retrieves filenames associated specific disease.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_filenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get disease filenames — get_disease_filenames","text":"","code":"get_disease_filenames(root_dir, disease_name)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_filenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get disease filenames — get_disease_filenames","text":"root_dir character string specifies root directory project. disease_name character string specifies name disease directory.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_filenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get disease filenames — get_disease_filenames","text":"character vector filenames associated specified disease.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_filenames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get disease filenames — get_disease_filenames","text":"","code":"root_dir <- system.file(\"extdata\", \"example-nl\", \"Reference_Data\", package = \"hiaR\") get_disease_filenames(root_dir, \"Lung_Cancer\") #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Diseases/Lung_Cancer #> ├── Disability #> │   └── NL_disease_LungCa_DALY_V1.xml #> ├── Excess_Mortalities #> │   └── NL_disease_LungCa_ExecMor_V2.xml #> ├── Incidences #> │   └── NL_disease_LungCa_Inc_V2.xml #> ├── Prevalences #> │   └── NL_disease_LungCa_Prev_V2.xml #> └── Relative_Risks_From_Risk_Factor #>     ├── RR_to_LungCa-Alcohol_cat5.xml #>     ├── RR_to_LungCa-Smoking_cat3.xml #>     ├── RR_to_LungCa-Smoking_dur.xml #>     ├── RR_to_LungCa_V2-BMI_cat3.xml #>     └── RR_to_LungCa_V2-BMI_cont.xml"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get disease directory names — get_disease_names","title":"Get disease directory names — get_disease_names","text":"Retrieves names paths disease directories within project structure.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get disease directory names — get_disease_names","text":"","code":"get_disease_names(root_dir, return_paths = FALSE)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get disease directory names — get_disease_names","text":"root_dir character string specifies root directory project. return_paths logical determines whether return full paths (TRUE) directory names (FALSE).","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get disease directory names — get_disease_names","text":"invisible character vector disease directory names paths.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_disease_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get disease directory names — get_disease_names","text":"","code":"root_dir <- system.file(\"extdata\", \"example-nl\", \"Reference_Data\", package = \"hiaR\") get_disease_names(root_dir) #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Diseases #> └── Lung_Cancer get_disease_names(root_dir, return_paths = TRUE) #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Diseases #> └── Lung_Cancer"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_file_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tree of nested files and directories — get_file_tree","title":"Create a tree of nested files and directories — get_file_tree","text":"Recurses tree_root returns nested, named list corresponding nesting structure files. leaf nodes, can empty directories files, returns NULL.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_file_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tree of nested files and directories — get_file_tree","text":"","code":"get_file_tree(tree_root)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_file_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tree of nested files and directories — get_file_tree","text":"tree_root Path root tree.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_file_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tree of nested files and directories — get_file_tree","text":"nested list. leaf nodes either empty directories (xml) file names.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_filenames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get population filenames — get_population_filenames","title":"Get population filenames — get_population_filenames","text":"Retrieves filenames associated specific population.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_filenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get population filenames — get_population_filenames","text":"","code":"get_population_filenames(root_dir, population_name)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_filenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get population filenames — get_population_filenames","text":"root_dir character string specifies root directory project. population_name character string specifies name population directory.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_filenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get population filenames — get_population_filenames","text":"character vector filenames associated specified population.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_filenames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get population filenames — get_population_filenames","text":"","code":"root_dir <- system.file(\"extdata\", \"example-nl\", \"Reference_Data\", package = \"hiaR\") get_population_filenames(root_dir, \"Netherlands\") #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Populations/Netherlands #> ├── newborns.xml #> ├── overalldisability.xml #> ├── overallmortality.xml #> └── size.xml"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get population directory names — get_population_names","title":"Get population directory names — get_population_names","text":"Retrieves names paths population directories within project structure.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get population directory names — get_population_names","text":"","code":"get_population_names(root_dir, return_paths = FALSE)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get population directory names — get_population_names","text":"root_dir character string specifies root directory project. return_paths logical determines whether return full paths (TRUE) directory names (FALSE).","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get population directory names — get_population_names","text":"invisible character vector population directory names paths.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_population_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get population directory names — get_population_names","text":"","code":"root_dir <- system.file(\"extdata\", \"example-nl\", \"Reference_Data\", package = \"hiaR\") get_population_names(root_dir) #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Populations #> └── Netherlands get_population_names(root_dir, return_paths = TRUE) #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Populations #> └── Netherlands"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_reference_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all reference data — get_reference_data","title":"Get all reference data — get_reference_data","text":"Function loads metadata reference data model. output function can used Shiny app display options user. function organizes files specified root directory predefined groups: diseases, populations, risk factors, relative risks. creates nested list structure representing file hierarchy within group.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_reference_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all reference data — get_reference_data","text":"","code":"get_reference_data(root_dir)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_reference_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all reference data — get_reference_data","text":"root_dir string specifying path root directory containing files grouped.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_reference_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all reference data — get_reference_data","text":"list four main components: diseases: nested list representing file structure \"Diseases\" directory populations: nested list representing file structure \"Populations\" directory risk_factors: nested list representing file structure \"Risk_Factors\" directory relative_risks: list two components: diseases: Relative risks extracted diseases group risk_factors: Relative risks extracted risk factors group","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_reference_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all reference data — get_reference_data","text":"function uses predefined keywords identify extract relative risk information diseases risk factors groups. diseases, looks \"Relative_Risks_From_Risk_Factor\" \"Relative_Risks_From_Diseases\". risk factors, searches \"Relative_Risks_For_Death\" \"Relative_Risks_For_Disability\".","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_reference_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all reference data — get_reference_data","text":"","code":"if (FALSE) { # \\dontrun{ root_dir <- \"../data/Tutorial_Data/Reference_Data\" file_groups <- get_reference_data(root_dir) } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_relative_risk_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the ","title":"Get the ","text":"Function extract relative risk information nested list structure. returns filename source relative risk. source extracted file name extract TRUE, otherwise item containing relative risk information.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_relative_risk_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the ","text":"","code":"get_relative_risk_source(input_list, lookup_items, extract = TRUE)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_relative_risk_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the ","text":"input_list nested list containing relative risk information. lookup_items character vector items look within sublist. extract Logical. TRUE (default), extracts source relative risks, calling extract_relative_risk_source. FALSE, returns name item containing relative risk.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_relative_risk_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the ","text":"nested list structure containing extracted information item names leaf nodes. empty directory leaf node, value empty list.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_relative_risk_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the ","text":"","code":"if (FALSE) { # \\dontrun{ groups <- get_file_groups(\"../data/Tutorial_Data/Reference_Data\") keywords_disease <- c(\"Relative_Risks_From_Risk_Factor\", \"Relative_Risks_From_Diseases\") keywords_rf <- c(\"Relative_Risks_For_Death\", \"Relative_Risks_For_Disability\") get_relative_risk_source(groups$diseases, keywords_disease) get_relative_risk_source(groups$risk_factors, keywords_rf, FALSE) } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_filenames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get risk factor filenames — get_risk_factor_filenames","title":"Get risk factor filenames — get_risk_factor_filenames","text":"Retrieves filenames associated specific risk factor.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_filenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get risk factor filenames — get_risk_factor_filenames","text":"","code":"get_risk_factor_filenames(root_dir, risk_factor_name)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_filenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get risk factor filenames — get_risk_factor_filenames","text":"root_dir character string specifies root directory project. risk_factor_name character string specifies name risk factor directory.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_filenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get risk factor filenames — get_risk_factor_filenames","text":"character vector filenames associated specified risk factor.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_filenames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get risk factor filenames — get_risk_factor_filenames","text":"","code":"root_dir <- system.file(\"extdata\", \"example-nl\", \"Reference_Data\", package = \"hiaR\") get_risk_factor_filenames(root_dir, \"Smoking_cat3\") #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Risk_Factors/Smoking_cat3 #> ├── Prevalences #> │   ├── NL_RF_smoking_cat3_Prev_V1.xml #> │   └── RF_smoking_cat_All_Never_Smokers_Prev.xml #> ├── Relative_Risks_For_Death #> │   └── RR_smoking_cat3_to_TotalMort.xml #> ├── Transitions #> │   ├── NL_RF_smoking_Transitions_Netto.xml #> │   └── NL_RF_smoking_Transitions_Zero.xml #> └── configuration.xml"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get risk factor directory names — get_risk_factor_names","title":"Get risk factor directory names — get_risk_factor_names","text":"Retrieves names paths risk factor directories within project structure.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get risk factor directory names — get_risk_factor_names","text":"","code":"get_risk_factor_names(root_dir, return_paths = FALSE)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get risk factor directory names — get_risk_factor_names","text":"root_dir character string specifies root directory project. return_paths logical determines whether return full paths (TRUE) directory names (FALSE).","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get risk factor directory names — get_risk_factor_names","text":"invisible character vector risk factor directory names paths.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_risk_factor_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get risk factor directory names — get_risk_factor_names","text":"","code":"root_dir <- system.file(\"extdata\", \"example-nl\", \"Reference_Data\", package = \"hiaR\") get_risk_factor_names(root_dir) #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Risk_Factors #> └── Smoking_cat3 get_risk_factor_names(root_dir, return_paths = TRUE) #> /home/runner/work/_temp/Library/hiaR/extdata/example-nl/Reference_Data/Risk_Factors #> └── Smoking_cat3"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_simulation_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get simulation directory names — get_simulation_names","title":"Get simulation directory names — get_simulation_names","text":"Retrieves names paths simulation directories within project structure.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_simulation_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get simulation directory names — get_simulation_names","text":"","code":"get_simulation_names(root_dir, return_paths = FALSE)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_simulation_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get simulation directory names — get_simulation_names","text":"root_dir character string specifies root directory project. return_paths logical determines whether return full paths (TRUE) directory names (FALSE).","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/get_simulation_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get simulation directory names — get_simulation_names","text":"invisible character vector simulation directory names paths.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/hiaR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hiaR: Dynamic Modeling of Health Impact Assessment in R — hiaR-package","title":"hiaR: Dynamic Modeling of Health Impact Assessment in R — hiaR-package","text":"hiaR package provides user-friendly interface DYNAMO-HIA software tool. contains R functions configure run DYNAMO-HIA, visualize results. package also contains Shiny app interactively run DYNAMO-HIA. DYNAMO-HIA (DYNamic MOdeling Health Impact Assessment) generic software tool specially designed aid quantification step health impact assessment. DYNAMO-HIA generic sense allows arbitrary chronic diseases risk-factors fit standard causal pathway health impact assessment framework modeled. Users can import use data add analyze diseases populations interest.","code":""},{"path":[]},{"path":"https://dynamo-hia.github.io/hiaR/reference/hiaR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hiaR: Dynamic Modeling of Health Impact Assessment in R — hiaR-package","text":"Maintainer: Hendriek Boshuizen hendriek.boshuizen@rivm.nl Authors: Malte Lüken m.luken@esciencecenter.nl Flavio Hafner f.hafner@esciencecenter.nl Laurens Bogaardt laurens.bogaardt@rivm.nl","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/launch_application.html","id":null,"dir":"Reference","previous_headings":"","what":"Starts the R shiny app to define the settings and then run the HIA Java app. — launch_application","title":"Starts the R shiny app to define the settings and then run the HIA Java app. — launch_application","text":"Starts R shiny app define settings run HIA Java app.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/launch_application.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Starts the R shiny app to define the settings and then run the HIA Java app. — launch_application","text":"","code":"launch_application()"},{"path":"https://dynamo-hia.github.io/hiaR/reference/launch_application.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Starts the R shiny app to define the settings and then run the HIA Java app. — launch_application","text":"graphical user interface Shiny app.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/launch_application.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Starts the R shiny app to define the settings and then run the HIA Java app. — launch_application","text":"","code":"if (FALSE) { # \\dontrun{ launch_application() } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/program_config_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server part for program config — program_config_server","title":"Server part for program config — program_config_server","text":"function observes values UI, loads reference meta data sends back reactive values caller.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/program_config_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server part for program config — program_config_server","text":"","code":"program_config_server(id)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/program_config_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server part for program config — program_config_server","text":"id module namespace id, matching id UI part.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/program_config_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server part for program config — program_config_server","text":"named list reactive values following elements reference_data: list loaded get_reference_data. dynamo_path: Path DYNAMO executable. working_path: Working directory DYNAMO program.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/program_config_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"UI part for program config — program_config_ui","title":"UI part for program config — program_config_ui","text":"Creates two panels user choose paths DYNAMO executable working directory.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/program_config_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI part for program config — program_config_ui","text":"","code":"program_config_ui(id)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/program_config_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI part for program config — program_config_ui","text":"id id namespace module.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/program_config_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UI part for program config — program_config_ui","text":"Shows error message reference data NULL right content.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/read_xml_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an XML Schema from the Package — read_xml_schema","title":"Read an XML Schema from the Package — read_xml_schema","text":"function reads XML schema (XSD file) extdata/schemas directory. constructs full file path schema returns parsed XML document.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/read_xml_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an XML Schema from the Package — read_xml_schema","text":"","code":"read_xml_schema(filename)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/read_xml_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an XML Schema from the Package — read_xml_schema","text":"filename character string representing base name XML schema file (without .xsd extension).","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/read_xml_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an XML Schema from the Package — read_xml_schema","text":"XML document object representing parsed XML schema.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/read_xml_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read an XML Schema from the Package — read_xml_schema","text":"function locates specified XML schema file within extdata/schemas directory, optionally appends .xsd extension filename, reads schema file using xml2::read_xml. useful working pre-defined schemas within package's directory structure.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/read_xml_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an XML Schema from the Package — read_xml_schema","text":"","code":"if (FALSE) { # \\dontrun{ # Read an XML schema file named 'example_schema' from the package schema <- read_xml_schema('populationsize') } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/relative_risk_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server Logic for Relative Risk Selection — relative_risk_server","title":"Server Logic for Relative Risk Selection — relative_risk_server","text":"Server-side logic selecting relative risks diseases.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/relative_risk_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server Logic for Relative Risk Selection — relative_risk_server","text":"","code":"relative_risk_server(id, relative_risks)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/relative_risk_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server Logic for Relative Risk Selection — relative_risk_server","text":"id character string. ID matches corresponding UI element. relative_risks reactive expression returning relative risks data.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/relative_risk_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server Logic for Relative Risk Selection — relative_risk_server","text":"reactive expression returns list containing names xml files corresponding selected diseases risk factors.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/relative_risk_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create UI for Relative Risk Selection — relative_risk_ui","title":"Create UI for Relative Risk Selection — relative_risk_ui","text":"Generate complete UI selecting relative risks risk factor diseases diseases diseases.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/relative_risk_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create UI for Relative Risk Selection — relative_risk_ui","text":"","code":"relative_risk_ui(id, relative_risks)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/relative_risk_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create UI for Relative Risk Selection — relative_risk_ui","text":"id character string. ID used namespace UI elements. relative_risks reactive expression returning relative risks data.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/relative_risk_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create UI for Relative Risk Selection — relative_risk_ui","text":"tagList containing UI components selecting relative risks diseases risk factors.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/risk_factor_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server logic for managing multiple risk factors — risk_factor_server","title":"Server logic for managing multiple risk factors — risk_factor_server","text":"Dynamically create manage individual risk factor servers based provided reference data, collect user inputs active risk factors.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/risk_factor_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server logic for managing multiple risk factors — risk_factor_server","text":"","code":"risk_factor_server(id, reference_data)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/risk_factor_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server logic for managing multiple risk factors — risk_factor_server","text":"id character string. ID used namespace server logic, matching ID used UI. reference_data reactive expression returns list containing risk factor information. list 'risk_factors' element, list element represents risk factor contains file options prevalences transitions.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/risk_factor_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server logic for managing multiple risk factors — risk_factor_server","text":"reactive expression returns named list active risk factors selected values. element list corresponds active risk factor contains nested list `prevalence' 'transitions'.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/risk_factor_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create UI for Multiple Risk Factors — risk_factor_ui","title":"Create UI for Multiple Risk Factors — risk_factor_ui","text":"Create collection individual risk factor UI elements based provided reference data.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/risk_factor_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create UI for Multiple Risk Factors — risk_factor_ui","text":"","code":"risk_factor_ui(id, reference_data)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/risk_factor_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create UI for Multiple Risk Factors — risk_factor_ui","text":"id character string. ID used namespace UI elements. reference_data reactive expression returns list containing risk factor information. list 'risk_factors' element, list element represents risk factor contains file options prevalences transitions.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/risk_factor_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create UI for Multiple Risk Factors — risk_factor_ui","text":"tagList containing UI components risk factor.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/run_dynamo_hia.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the DYNAMO-HIA simulation — run_dynamo_hia","title":"Run the DYNAMO-HIA simulation — run_dynamo_hia","text":"wrapper running Java application. Runs application batch mode.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/run_dynamo_hia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the DYNAMO-HIA simulation — run_dynamo_hia","text":"","code":"run_dynamo_hia(   simulation_filename,   app_filename,   log_filename = \"run_dynamo_hia.log\" )"},{"path":"https://dynamo-hia.github.io/hiaR/reference/run_dynamo_hia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the DYNAMO-HIA simulation — run_dynamo_hia","text":"simulation_filename Path simulation batch file. line file must contain directory name simulation run. file located \"working directory\", .e., directory contains Reference_Data Simulations subdirectories. app_filename Path Java application. log_filename Path log file. default filename run_dynamo_hia.log. Can also FALSE disable logging.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/run_dynamo_hia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the DYNAMO-HIA simulation — run_dynamo_hia","text":"Returns TRUE simulations ran successfully. Otherwise, forward exception returned Java application.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/simulation_config_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server part for simulation config — simulation_config_server","title":"Server part for simulation config — simulation_config_server","text":"Processes user input data UI reactive list. Uses reference meta data letting user choose options. save button clicked, start run Java app (yet implemented).","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/simulation_config_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server part for simulation config — simulation_config_server","text":"","code":"simulation_config_server(id, reference_data)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/simulation_config_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server part for simulation config — simulation_config_server","text":"id module namespace id, matching id UI part. reference_data reactive, containing reference meta data.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/simulation_config_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server part for simulation config — simulation_config_server","text":"reactive list key-value pairs read config UI, used app/modules.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/simulation_config_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"UI part for simulation config — simulation_config_ui","title":"UI part for simulation config — simulation_config_ui","text":"UI part simulation config","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/simulation_config_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI part for simulation config — simulation_config_ui","text":"","code":"simulation_config_ui(id)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/simulation_config_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI part for simulation config — simulation_config_ui","text":"id id namespace module. population_choices character vector possible choices populations.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_disease_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server part for a single disease — single_disease_server","title":"Server part for a single disease — single_disease_server","text":"Server part single disease","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_disease_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server part for a single disease — single_disease_server","text":"","code":"single_disease_server(id)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_disease_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server part for a single disease — single_disease_server","text":"id string. module namespace id, matching id UI part.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_disease_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server part for a single disease — single_disease_server","text":"reactive expression. checkbox corresponding UI checked, returns NULL. Otherwise, returns list 4: prevalence incidence excess_mortality disability items contain xml file user chose UI.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_disease_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"UI for selecting a single disease — single_disease_ui","title":"UI for selecting a single disease — single_disease_ui","text":"UI selecting single disease","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_disease_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI for selecting a single disease — single_disease_ui","text":"","code":"single_disease_ui(id, disease_name, disease_files)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_disease_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI for selecting a single disease — single_disease_ui","text":"id string. id namespace module disease_name name disease, displayed card title disease_files named list xml files user can choose . list 4 elements: Prevalences Incidences Excess_Mortalities Disability element named list, names xml files.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_disease_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UI for selecting a single disease — single_disease_ui","text":"bslib card header disease name checkbox. checkbox clicked, user sees card content: selectInput fields prevalence, incidence, excess mortality disability.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_relative_risk_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server logic for a single group of relative risks — single_relative_risk_server","title":"Server logic for a single group of relative risks — single_relative_risk_server","text":"Server-side logic single group relative risks, handling selection choices checkbox group.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_relative_risk_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server logic for a single group of relative risks — single_relative_risk_server","text":"","code":"single_relative_risk_server(id, choices)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_relative_risk_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server logic for a single group of relative risks — single_relative_risk_server","text":"id character string. ID matches corresponding UI element. choices reactive expression returning named list available choices.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_relative_risk_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server logic for a single group of relative risks — single_relative_risk_server","text":"reactive expression returns names selected choices.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_relative_risk_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create UI for a single group of relative risks. — single_relative_risk_ui","title":"Create UI for a single group of relative risks. — single_relative_risk_ui","text":"Generate UI component single relative risk group, creating card checkbox group.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_relative_risk_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create UI for a single group of relative risks. — single_relative_risk_ui","text":"","code":"single_relative_risk_ui(id, title, choices)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_relative_risk_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create UI for a single group of relative risks. — single_relative_risk_ui","text":"id character string. ID used namespace UI elements. title character string. title group relative risks. choices reactive expression returning list possible choices checkbox group.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_relative_risk_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create UI for a single group of relative risks. — single_relative_risk_ui","text":"Shiny UI component (bslib::card) containing checkbox group specified relative risk group.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server logic for a Single Risk Factor — single_risk_factor_server","title":"Server logic for a Single Risk Factor — single_risk_factor_server","text":"function defines server-side logic single risk factor Shiny application. processes user inputs specific risk factor returns selected values risk factor active.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server logic for a Single Risk Factor — single_risk_factor_server","text":"","code":"single_risk_factor_server(id)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server logic for a Single Risk Factor — single_risk_factor_server","text":"id character string. ID used namespace server logic, matching ID used UI.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server logic for a Single Risk Factor — single_risk_factor_server","text":"reactive expression returns either NULL (risk factor checked) list containing selected values prevalence transitions. returned reactive expression can used parent modules collect data multiple risk factors.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create UI for a Single Risk Factor — single_risk_factor_ui","title":"Create UI for a Single Risk Factor — single_risk_factor_ui","text":"Generate UI component single risk factor Shiny application. creates card checkbox header conditional inputs prevalence transitions.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create UI for a Single Risk Factor — single_risk_factor_ui","text":"","code":"single_risk_factor_ui(id, risk_factor_name, risk_factor_files)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create UI for a Single Risk Factor — single_risk_factor_ui","text":"id character string. ID used namespace UI elements. risk_factor_name character string. name risk factor displayed. risk_factor_files list containing three named elements: Prevalences: named list prevalence file options. Transitions: named list transition file options.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create UI for a Single Risk Factor — single_risk_factor_ui","text":"Shiny UI component (bslib::card) specified risk factor.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/single_risk_factor_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create UI for a Single Risk Factor — single_risk_factor_ui","text":"function creates collapsible card checkbox header. checkbox checked, reveals select inputs prevalence transitions. options inputs populated provided risk_factor_files list.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_file_ending.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the file ending of a file — validate_file_ending","title":"Validate the file ending of a file — validate_file_ending","text":"Validate file ending file","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_file_ending.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the file ending of a file — validate_file_ending","text":"","code":"validate_file_ending(file_name, ending)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_file_ending.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the file ending of a file — validate_file_ending","text":"file_name String file name. ending file name suffix, ie .xml.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_file_ending.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the file ending of a file — validate_file_ending","text":"Throws error validation fails.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_file_ending.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate the file ending of a file — validate_file_ending","text":"","code":"if (FALSE) { # \\dontrun{ validate_file_ending(\"hello.txt\", \".xml\") # error validate_file_ending(\"hello.py\", \".py\") # success } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_n_substrings.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate that a string has N substrings of a given pattern — validate_n_substrings","title":"Validate that a string has N substrings of a given pattern — validate_n_substrings","text":"Validate string N substrings given pattern","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_n_substrings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate that a string has N substrings of a given pattern — validate_n_substrings","text":"","code":"validate_n_substrings(s, pattern, count)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_n_substrings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate that a string has N substrings of a given pattern — validate_n_substrings","text":"s string check. pattern pattern search . count number occurrences pattern s.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_n_substrings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate that a string has N substrings of a given pattern — validate_n_substrings","text":"Throws error check fails.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_n_substrings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate that a string has N substrings of a given pattern — validate_n_substrings","text":"","code":"if (FALSE) { # \\dontrun{ validate_n_substrings(\"hello-world\", \"-\", 1) # passes validate_n_substrings(\"hello-world\", \"!\", 1) # fails } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_xml_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate an XML document against a schema — validate_xml_schema","title":"Validate an XML document against a schema — validate_xml_schema","text":"function validates XML document specified XML schema. XML document conform schema, function throws error message generated schema name.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_xml_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate an XML document against a schema — validate_xml_schema","text":"","code":"validate_xml_schema(root, schema_name)"},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_xml_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate an XML document against a schema — validate_xml_schema","text":"root XML document object representing root XML validated. schema_name character string representing base name XML schema (without .xsd extension) XML document validated.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_xml_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate an XML document against a schema — validate_xml_schema","text":"function returns nothing success throws error XML document fails validation.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_xml_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate an XML document against a schema — validate_xml_schema","text":"function reads specified XML schema using read_xml_schema validates root XML document using xml_validate.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/validate_xml_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate an XML document against a schema — validate_xml_schema","text":"","code":"if (FALSE) { # \\dontrun{ # Validate an XML document against the 'example_schema' schema root <- xml2::read_xml('<root><child>Example<\/child><\/root>') validate_xml_schema(root, 'example_schema') } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_disease_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Write XML files for a disease to a directory — write_disease_dir","title":"Write XML files for a disease to a directory — write_disease_dir","text":"function creates directory structure specified disease generates XML files relative risks risk factors diseases, well disease prevalences, incidences, excess mortalities, disability data. directories XML files named organized according input lists provided category. function creates files provided arguments leaves files .","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_disease_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write XML files for a disease to a directory — write_disease_dir","text":"","code":"write_disease_dir(   disease_name,   risk_factor_list,   diseases_list,   prevalences_list,   incidences_list,   excess_mortalities_list,   disability_list )"},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_disease_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write XML files for a disease to a directory — write_disease_dir","text":"disease_name character string representing name disease. directory created name already exist. risk_factor_list named list element list containing two components: 'data' (risk factor data) 'type' (type risk factor). XML files generated risk factor. diseases_list named list element list containing disease data key 'data'. XML files generated relative risks diseases. prevalences_list named list element list containing prevalence data key 'data'. XML files generated prevalence. incidences_list named list element list containing incidence data key 'data'. XML files generated incidence. excess_mortalities_list named list element list containing three components: 'unit_type' (unit data), 'parameter_type' (type parameter), 'data' (excess mortality data). XML files generated excess mortality. disability_list named list element list containing disability data key 'data'. XML files generated disability dataset.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_disease_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write XML files for a disease to a directory — write_disease_dir","text":"Returns TRUE directory structure XML files created successfully.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_disease_dir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write XML files for a disease to a directory — write_disease_dir","text":"function creates directory named disease subdirectories : containing: Relative_Risks_From_Risk_Factor Relative_Risks_From_Diseases Prevalences Incidences Excess_Mortalities Disabilities category, function generates XML files based data provided corresponding input list. XML file saved appropriate subdirectory. risk factor 'type' can 'continuous', 'continuous4p', 'categorical', 'categorical4p', 'compound', 'compound4p'. excess mortality 'parameter_type' can 'Acutely Fatal' 'Cured Fraction'.","code":""},{"path":[]},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_disease_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write XML files for a disease to a directory — write_disease_dir","text":"","code":"if (FALSE) { # \\dontrun{ # A list element corresponds to a risk factor (e.g., smoking) risk_factors <- list(\"smoking\" = list(data = data.frame(...), type = \"categorical\"))  # A list element corresponds to another disease (e.g., diabetes) diseases <- list(\"diabetes\" = list(data = data.frame(...)))  # A list element corresponds to a population (e.g., Netherlands) prevalences <- list(\"NL\" = list(data = data.frame(...))) incidences <- list(\"NL\" = list(data = data.frame(...))) mortalities <- list(\"NL\" = list(   unit_type = \"Rate\",   parameter_type = \"Acutely Fatal\",   data = data.frame(...) )) disabilities <- list(\"NL\" = list(data = data.frame(...)))  create_disease_dir(   \"stroke\", risk_factors, diseases, prevalences,   incidences, mortalities, disabilities ) } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_population_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Write XML files for a population to a directory — write_population_dir","title":"Write XML files for a population to a directory — write_population_dir","text":"function creates directory structure specified population generates XML files containing data newborns, population size, overall mortality, disability. files saved population directory. function creates files provided arguments leaves files .","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_population_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write XML files for a population to a directory — write_population_dir","text":"","code":"write_population_dir(   population_name,   sex_ratio,   starting_year,   newborns_df,   size_df,   mortality_df,   disability_df )"},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_population_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write XML files for a population to a directory — write_population_dir","text":"population_name character string representing name population. directory created name already exist. sex_ratio numeric value representing sex ratio newborns (male female ratio). starting_year integer representing starting year newborns data. newborns_df data frame containing data newborns, typically columns year number newborns. size_df data frame containing population size data, typically columns year population size. mortality_df data frame containing overall mortality data, typically columns year mortality rate. disability_df data frame containing overall disability data, typically columns year disability rate.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_population_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write XML files for a population to a directory — write_population_dir","text":"Returns TRUE directory XML files created successfully.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_population_dir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write XML files for a population to a directory — write_population_dir","text":"function creates directory named population generates following XML files within : newborns.xml: Contains data newborns, including sex ratio number newborns per year. size.xml: Contains data population size per year. overallmortality.xml: Contains overall mortality rates per year. overalldisability.xml: Contains overall disability rates per year. function uses helper functions create XML documents type data. functions expected handle formatting structuring data valid XML.","code":""},{"path":[]},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_population_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write XML files for a population to a directory — write_population_dir","text":"","code":"if (FALSE) { # \\dontrun{ newborns <- data.frame(...) size <- data.frame(...) mortality <- data.frame(...) disability <- data.frame(...)  create_population_dir('ExamplePopulation', 1.05, 2009, newborns, size, mortality, disability) } # }"},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_risk_factor_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Write XML files for a risk factor to a directory — write_risk_factor_dir","title":"Write XML files for a risk factor to a directory — write_risk_factor_dir","text":"function creates directory structure risk factor populates various XML files containing risk factor data.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_risk_factor_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write XML files for a risk factor to a directory — write_risk_factor_dir","text":"","code":"write_risk_factor_dir(   risk_factor_name,   transition_matrix_list,   transition_drift_list,   relative_risks_death_list,   prevalences_list,   prevalences_duration_list,   relative_risks_disability_list,   risk_factor_configuration )"},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_risk_factor_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write XML files for a risk factor to a directory — write_risk_factor_dir","text":"risk_factor_name character string specifying name risk factor. directory created name already exist. transition_matrix_list list transition matrices, element contains list 'data' 'type' components. transition_drift_list list transition drifts, element contains list 'data', 'type', 'trend' components. relative_risks_death_list list relative risks death, element contains list 'data' 'type' components. prevalences_list list prevalences, element contains list 'data', 'type', 'distribution' components. prevalences_duration_list list prevalence durations, element contains list `'data'“ component. relative_risks_disability_list list relative risks disability, element contains list 'data' 'type' components. risk_factor_configuration list risk factor configurations containing 'data', 'reference', 'type' components.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_risk_factor_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write XML files for a risk factor to a directory — write_risk_factor_dir","text":"logical value: TRUE directory structure successfully created.","code":""},{"path":"https://dynamo-hia.github.io/hiaR/reference/write_risk_factor_dir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write XML files for a risk factor to a directory — write_risk_factor_dir","text":"function creates directory named disease subdirectories : Transitions Relative_Risks_For_Disability Relative_Risks_For_Death Prevalences DurationDistributions configuration.xml category, function generates XML files based data provided corresponding input list. XML file saved appropriate subdirectory. transition matrix drift type can 'zero' 'netto'. risk factor 'type' can 'continuous', 'categorical', 'compound'. prevalences_list, 'continuous' 'categorical' valid types.","code":""},{"path":[]}]
